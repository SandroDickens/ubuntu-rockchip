name: Build Linux 5.10.y
run-name: Build with Rockchip Linux 5.10

on:
  workflow_dispatch:
    inputs:
      launchpad:
        description: use launchpad
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - nanopc-t6

    steps:
      - name: Get more disk space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 2048
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout LFS
        shell: bash
        run: git lfs fetch && git lfs checkout

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y build-essential gcc-aarch64-linux-gnu bison \
          qemu-user-static qemu-system-arm qemu-efi u-boot-tools binfmt-support \
          debootstrap flex libssl-dev bc rsync kmod cpio xz-utils fakeroot parted \
          udev dosfstools uuid-runtime git-lfs device-tree-compiler python2 python3 \
          python-is-python3 fdisk bc debhelper

      - name: Build kernel
        shell: bash
        if: inputs.launchpad == 'false'
        run: sudo ./build.sh -b ${{ matrix.platform }} --kernel-only

      - name: Build u-boot
        shell: bash
        if: inputs.launchpad == 'false'
        run: sudo ./build.sh -b ${{ matrix.platform }} --uboot-only

      - name: Build image
        shell: bash
        run: |
            args=""
            if [ "${{ inputs.launchpad }}" == true ]; then
                args="--launchpad"
            fi
            sudo ./build.sh -b ${{ matrix.platform }} $args

      - name: Upload server image
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-22.04.3-preinstalled-server-arm64-${{ matrix.platform }}
          path: ./images/ubuntu-22.04.3-preinstalled-server-arm64-${{ matrix.platform }}.*
          if-no-files-found: error

      - name: Upload desktop image
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-22.04.3-preinstalled-desktop-arm64-${{ matrix.platform }}
          path: ./images/ubuntu-22.04.3-preinstalled-desktop-arm64-${{ matrix.platform }}.*
          if-no-files-found: error

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Ubuntu 22.04.3 LTS(Jammy Jellyfish) 5.10.y
          body: Product ${{ matrix.platform }}
          draft: false
          prerelease: true

      - name: Upload Server Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./images/ubuntu-22.04.3-preinstalled-server-arm64-arm64-${{ matrix.platform }}.img.xz
          asset_name: ubuntu-22.04.3-preinstalled-server-arm64-arm64-${{ matrix.platform }}.img.xz
          asset_content_type: application/octet-stream
 
      - name: Upload Desktop Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./images/ubuntu-22.04.3-preinstalled-desktop-arm64-${{ matrix.platform }}.img.xz
          asset_name: ubuntu-22.04.3-preinstalled-desktop-arm64-${{ matrix.platform }}.img.xz
          asset_content_type: application/octet-stream

      - name: Clean cache
        shell: bash
        run: sync && sudo rm -rf ./images/ ./build/ && sync
